# Copyright (c) 2017, 2018 Michael Heilmann

# Require sudo (to install software).
sudo: required
# Select Ubuntu 'Trusty'.
dist: trusty
# Select language C.
language: c

# Compile once for Linux and once for OS X.
os:
    - linux
    #- osx

# Compile once for Clang and once for GCC.
compiler:
    - clang
    - gcc

matrix:
    # Remove default jobs.
    exclude:
        - compiler: gcc
        - compiler: clang
        - compiler: clang
          os: osx
          env:
            - MATRIX_EVAL_BEFORE_INSTALL="CC=clang"
            - MATRIX_EVAL_BEFORE_SCRIPT="export CC=clang"   
    # Add non-default jobs.
    include:
        - compiler: gcc
          os: linux
          addons:
            apt:
                sources:
                    # Add GCC-6 by alias
                    # See
                    # https://docs.travis-ci.com/user/installing-dependencies/
                    # and
                    # https://github.com/travis-ci/apt-source-whitelist/blob/master/ubuntu.json
                    # for more information.
                    - ubuntu-toolchain-r-test
                    - sourceline: "deb http://archive.ubuntu.com/ubuntu/ trusty multiverse"
                    - sourceline: "deb http://archive.ubuntu.com/ubuntu/ trusty-backports universe"
                packages:
                    # GCC 6.
                    - gcc-6
                    # CMake (outdated).
                    - cmake-data
                    - cmake
                    # OpenAL Soft.
                    - libopenal-dev
                    - libopenal1
                    # Install pulseaudio as backend for OpenAL Soft.
                    - pulseaudio
                    # for glxinfo
                    - mesa-utils
                    # Mesa offscreen rendering.
                    - libosmesa6
                    - libgl1-mesa-glx
                    - libgl1-mesa-dri
                    #
                    - xvfb 
          env:
            - MATRIX_EVAL_BEFORE_INSTALL="CC=gcc-6"
            - MATRIX_EVAL_BEFORE_INSTALL="$MATRIX_EVAL_BEFORE_INSTALL ; export XVFBARGS=\"-screen 0 1280x1024x24 -ac +extension GLX +render\""
            - MATRIX_EVAL_BEFORE_INSTALL="$MATRIX_EVAL_BEFORE_INSTALL ; export DISPLAY=:99.0"
            - MATRIX_EVAL_BEFORE_INSTALL="$MATRIX_EVAL_BEFORE_INSTALL ; export LIBGL_ALWAYS_SOFTWARE=1"
            - MATRIX_EVAL_BEFORE_INSTALL="$MATRIX_EVAL_BEFORE_INSTALL ; sh -e /etc/init.d/xvfb start"
            - MATRIX_EVAL_BEFORE_INSTALL="$MATRIX_EVAL_BEFORE_INSTALL ; sleep 3"
            - MATRIX_EVAL_BEFORE_SCRIPT="export CC=gcc-6"    
        - compiler: clang
          os: linux
          addons:
            apt:
                sources:
                    # Add GCC-6 by alias
                    # See
                    # https://docs.travis-ci.com/user/installing-dependencies/
                    # and
                    # https://github.com/travis-ci/apt-source-whitelist/blob/master/ubuntu.json
                    # for more information.
                    - ubuntu-toolchain-r-test
                    # Add LLVM 4.0 by alias
                    # See
                    # https://docs.travis-ci.com/user/installing-dependencies/
                    # and
                    # https://github.com/travis-ci/apt-source-whitelist/blob/master/ubuntu.json
                    # for more information.
                    - llvm-toolchain-trusty-4.0
                packages:
                    # GCC 6
                    - gcc-6
                    # CLANG 4.0
                    - clang-4.0
                    - libc++-dev
                    # CMake (outdated)
                    - cmake-data
                    - cmake
                    # OpenAL Soft.
                    - libopenal-dev
                    - libopenal1
                    # Install pulseaudio as backend for OpenAL Soft.
                    - pulseaudio
                    # for glxinfo
                    - mesa-utils
                    # Mesa offscreen rendering.
                    - libosmesa6
                    - libgl1-mesa-glx
                    - libgl1-mesa-dri
                    #
                    - xvfb 
          env:
            - MATRIX_EVAL_BEFORE_INSTALL="CC=clang-4.0"
            - MATRIX_EVAL_BEFORE_INSTALL="$MATRIX_EVAL_BEFORE_INSTALL ; export XVFBARGS=\"-screen 0 1280x1024x24\""
            - MATRIX_EVAL_BEFORE_INSTALL="$MATRIX_EVAL_BEFORE_INSTALL ; export DISPLAY=:99.0"
            - MATRIX_EVAL_BEFORE_INSTALL="$MATRIX_EVAL_BEFORE_INSTALL ; sh -e /etc/init.d/xvfb start"
            - MATRIX_EVAL_BEFORE_INSTALL="$MATRIX_EVAL_BEFORE_INSTALL ; sleep 3"
            - MATRIX_EVAL_BEFORE_SCRIPT="export CC=clang-4.0"

before_install:
#- sudo add-apt-repository -y ppa:ubuntu-x-swat/updates
- sudo apt-get update
- sudo apt-get -qq purge ruby* > /dev/null 
- sudo apt-get -qq purge chromium* > /dev/null 
- sudo apt-get -qq purge oracle* > /dev/null 
- sudo apt-get -qq purge openjdk* > /dev/null 
- sudo apt-get -qq purge openjdk* > /dev/null 
- sudo apt-get -qq purge erlang* > /dev/null 
- sudo apt-get -qq purge mongodb-org* > /dev/null 
- sudo apt-get -qq purge postgresql* > /dev/null 
- sudo apt-get -qq purge python* > /dev/null 
- sudo apt-get -qq autoremove > /dev/null 
- sudo apt-get -qq dist-upgrade > /dev/null
# libdrm
- wget "https://dri.freedesktop.org/libdrm/libdrm-2.4.9.tar.gz"
- tar xfv libdrm-2.4.9.tar.gz
- rm libdrm-2.4.9.tar.gz
- cd libdrm-2.4.9
- ./configure --prefix=/usr/local --enable-vc4 --enable-freedreno --enable-etnaviv-experimental-api
- make
- sudo make install
- cd ..
- rm -rf libdrm-2.4.9
# mesa
- wget "https://mesa.freedesktop.org/archive/mesa-18.0.1.tar.gz"
- tar xfv mesa-18.0.1.tar.gz
- rm mesa-18.0.1.tar.gz
- cd mesa-18.0.1
- ./configure --enable-glx=gallium-xlib --with-gallium-drivers=swrast,swr --disable-dri --disable-gbm --disable-egl --enable-gallium-osmesa --prefix=/usr/local
- make
- sudo make install
- cd ..
- rm -rf mesa-18.0.1
#
- eval "${MATRIX_EVAL_BEFORE_INSTALL}"

# Download and install CMake.
install:
# Create a dependency directory. Store its path in `${DEPS_DIR}`.
- DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
- mkdir -p "${DEPS_DIR}" && cd "${DEPS_DIR}"
# Download CMake 3.10.1 binary into `${DEPS_DIR}/cmake`.
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then CMAKE_BIN_URL="https://cmake.org/files/v3.10/cmake-3.10.1-Darwin-x86_64.tar.gz" ; fi
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then CMAKE_BIN_URL="https://cmake.org/files/v3.10/cmake-3.10.1-Linux-x86_64.tar.gz" ; fi
# Unpack it and export its binary directory to path.
- |
  mkdir -p cmake-bin
  cd cmake-bin
  wget --no-check-certificate -O - -q "${CMAKE_BIN_URL}" | tar xsz --strip-components=1 -f -
  cd ..
  export PATH="${DEPS_DIR}/cmake-bin/bin:${PATH}"

before_script:
- LIBGL_DEBUG=verbose; glxinfo
# Invoke CMake on CMakeLists.txt.
- eval "${MATRIX_EVAL_BEFORE_SCRIPT}"
- cd "${TRAVIS_BUILD_DIR}"
- cmake CMakeLists.txt


script:
# Enter the Travis build directory.
- cd "${TRAVIS_BUILD_DIR}"
# Run "make all" and "make test".
- make all
- ctest --output-on-failure --extra-verbose

notifications:
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/deeca47d07972d6be9c3
      - https://webhooks.gitter.im/e/b8067a6aaf118ec7e6a1
    on_success: always  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
    on_start: never     # options: [always|never|change] default: always
